// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as HyperProvider from "../context/HyperProvider.res.js";
import * as HyperNativeModules from "../nativeModules/HyperNativeModules.res.js";

function useHyper() {
  var match = React.useContext(HyperProvider.hyperProviderContext);
  var hyperVal = match[0];
  var initPaymentSession = function (initPaymentSheetParams) {
    console.log("hello world", hyperVal);
    return {
            configuration: initPaymentSheetParams.configuration,
            publishableKey: hyperVal.publishableKey,
            clientSecret: initPaymentSheetParams.clientSecret,
            type: "payment",
            from: "rn"
          };
  };
  var presentPaymentSheet = function (paySheetParams) {
    console.log("present payment sheet called!!!!!!!");
    return new Promise((function (resolve, param) {
                  var responseResolve = function (arg) {
                    var val = JSON.parse(arg);
                    resolve(val);
                  };
                  HyperNativeModules.presentPaymentSheet(paySheetParams, responseResolve);
                }));
  };
  var initHeadless = function (paySheetParams) {
    var paymentSheetParams_publishableKey = hyperVal.publishableKey;
    var paymentSheetParams_clientSecret = paySheetParams.clientSecret;
    var paymentSheetParams = {
      publishableKey: paymentSheetParams_publishableKey,
      clientSecret: paymentSheetParams_clientSecret,
      type: "payment",
      from: "rn"
    };
    console.log("called at RN", paymentSheetParams);
    HyperNativeModules.initHeadless(paymentSheetParams, (function (obj) {
            console.log("headless ok!!!!!", obj);
          }));
  };
  var paymentMethodParams = function () {
    console.log("hello world");
  };
  var getCustomerSavedPaymentMethodData = function (paySheetParams) {
    console.log("params test", paySheetParams);
    var paymentSheetParams_publishableKey = hyperVal.publishableKey;
    var paymentSheetParams_clientSecret = paySheetParams.clientSecret;
    var paymentSheetParams = {
      publishableKey: paymentSheetParams_publishableKey,
      clientSecret: paymentSheetParams_clientSecret,
      type: "payment",
      from: "rn"
    };
    return new Promise((function (resolve, param) {
                  var responseResolve = function (arg) {
                    console.log("inside promise========", arg);
                    resolve(arg);
                  };
                  HyperNativeModules.getCustomerSavedPaymentMethodData(paymentSheetParams, responseResolve);
                }));
  };
  var confirmWithCustomerDefaultPaymentMethod = function (paySheetParams) {
    console.log("params test", paySheetParams);
    var paymentSheetParams_publishableKey = hyperVal.publishableKey;
    var paymentSheetParams_clientSecret = paySheetParams.clientSecret;
    var paymentSheetParams = {
      publishableKey: paymentSheetParams_publishableKey,
      clientSecret: paymentSheetParams_clientSecret,
      type: "payment",
      from: "rn"
    };
    return new Promise((function (resolve, param) {
                  var responseResolve = function (arg) {
                    console.log("inside promise========", arg);
                    resolve(arg);
                  };
                  HyperNativeModules.confirmWithCustomerDefaultPaymentMethod(paymentSheetParams, responseResolve);
                }));
  };
  return {
          initPaymentSession: initPaymentSession,
          presentPaymentSheet: presentPaymentSheet,
          paymentMethodParams: paymentMethodParams,
          initHeadless: initHeadless,
          getCustomerSavedPaymentMethodData: getCustomerSavedPaymentMethodData,
          confirmWithCustomerDefaultPaymentMethod: confirmWithCustomerDefaultPaymentMethod
        };
}

export {
  useHyper ,
}
/* react Not a pure module */
